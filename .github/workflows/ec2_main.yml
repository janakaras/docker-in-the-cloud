

name: 'EC2 Main Workflow'

on:
 workflow_dispatch
#   push:
#       branches:
#         - main
#   pull_request:

jobs:
  terraform:
    name: 'EC2 Main Workflow'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      #run: terraform fmt -check
      run: terraform fmt

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      
    - name: SSH to EC2 and Update
      run: |
        echo "${{ secrets.CC_UNI }}" | tr -d '\r' > key.pem | chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.80.67.161 '
          sudo service docker start &&
          sudo rm -rf * &&
          sudo wget https://github.com/janakaras/docker-in-the-cloud/archive/refs/heads/main.zip &&
          sudo unzip main.zip &&
          cd docker-in-the-cloud-main &&
          sudo docker-compose up --detach --force-recreate --build
        '
      
  #  - name: Keep infrastructure
  #    run: sleep 600 
      
  #  - name: Terraform destroy 
  #    run: terraform destroy -auto-approve
  
      
    


